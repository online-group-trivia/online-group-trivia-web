{"version":3,"sources":["reportWebVitals.js","components/HomeComponent.jsx","assets/rnm.png","components/TeamInfo.jsx","components/GameComponent.jsx","components/QuestionComponent.jsx","components/AddQuestionComponent.jsx","components/LoadingScreenComponent.jsx","assets/evil-morty.jpg","assets/404.png","components/ServerErrorMessageComponent.jsx","components/ManageComponent.jsx","AppComponent.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HomeComponent","props","history","useHistory","Jumbotron","className","Container","Row","mb","Col","sm","type","id","placeholder","Button","variant","block","onClick","myHeaders","Headers","myRequest","Request","method","headers","mode","cache","body","JSON","stringify","title","fetch","response","json","data","console","log","push","TeamInfo","moves","this","players","map","player","i","class","React","Component","GameComponent","src","logo","alt","QuestionComponent","handleRemove","bind","onRemoveQuestion","question","Badge","xs","size","AddQuestionComponent","handleKeyPress","event","key","state","value","handleAdd","handleChange","onAddQuestion","questionInput","focus","setState","target","htmlFor","InputGroup","FormControl","ref","onChange","onKeyPress","Append","disabled","LoadingScreenComponent","params","style","backgroundColor","SomethingWentWrong","msg","image","NotFound","notFound","ServerErrorMessageComponent","ManageComponent","roomId","nextId","showToast","SaveOnServer","closeToast","handleFocusOut","text","gameTitle","getRoomDataFromServer","ok","requestStatus","status","undefined","calculateNextId","Math","max","slice","q","questions","document","catch","err","questionStr","myQuestions","index","indexOf","splice","removeQuestion","inputWidth","inputHeight","inputMaxLength","labelFontWeight","inputFontWeight","onFocusOut","addQuestion","Inner","query","URLSearchParams","useLocation","search","exact","path","get","AppComponent","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.923e0988.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./HomeComponent.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n\r\nfunction HomeComponent(props) {\r\n  const history = useHistory();\r\n  const createRoom = () => {\r\n    const myHeaders = new Headers();\r\n    const myRequest = new Request(\"http://127.0.0.1:9631/create\", {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      mode: \"cors\",\r\n      cache: \"default\",\r\n      body: JSON.stringify({ title: \"My new trivia game!\" }),\r\n    });\r\n    fetch(myRequest)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let id = data[\"room_uuid\"];\r\n        console.log(id);\r\n        history.push(`/manage?roomId=${id}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Jumbotron className=\"white-background d-flex align-items-center min-vh-100 \">\r\n      <Container className=\"text-center\">\r\n        <Row mb={4}>\r\n          <Col sm>\r\n            <h1>Welcome to Group Trivia!</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row mb={2}>\r\n          <Col sm>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlInput1\"\r\n              placeholder=\"Room ID\"\r\n            ></input>\r\n          </Col>\r\n          <Col sm>\r\n            <Button variant=\"primary\" block>\r\n              Connect\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Button variant=\"primary\" onClick={createRoom}>\r\n              or, Create a New Room\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default HomeComponent;\r\n","export default __webpack_public_path__ + \"static/media/rnm.a218ca22.png\";","import React from \"react\";\r\n\r\nclass TeamInfo extends React.Component {\r\n  render() {\r\n    const moves = this.props.players.map((player, i) => {\r\n      return (\r\n        <h1>\r\n          <span class=\"badge bg-secondary\">{player}</span>\r\n        </h1>\r\n      );\r\n    });\r\n\r\n    return <ol>{moves}</ol>;\r\n  }\r\n}\r\n\r\nexport default TeamInfo;\r\n","import logo from \"../assets/rnm.png\";\nimport \"./GameComponent.css\";\nimport React from \"react\";\n// const TeamInfo = React.lazy(() => import(\"./TeamInfo\"));\nimport TeamInfo from \"./TeamInfo.jsx\";\nclass GameComponent extends React.Component {\n  componentDidMount() {\n    const myHeaders = new Headers();\n    const myRequest = new Request(\n      \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita\",\n      {\n        method: \"GET\",\n        headers: myHeaders,\n        mode: \"cors\",\n        cache: \"default\",\n      }\n    );\n\n    fetch(myRequest)\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Welcome to the best game in the world!</h1>\n        </header>\n        <body className=\"App-body\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-sm\">\n                <TeamInfo players={[\"Eden\", \"Yardena\"]}></TeamInfo>\n              </div>\n              <div class=\"col-sm\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              </div>\n              <div class=\"col-sm\">\n                <TeamInfo players={[\"Dan\", \"Barak\"]}></TeamInfo>\n              </div>\n            </div>\n          </div>\n        </body>\n      </div>\n    );\n  }\n}\n\nexport default GameComponent;\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport class QuestionComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n  }\r\n\r\n  handleRemove() {\r\n    this.props.onRemoveQuestion(this.props.question.id);\r\n  }\r\n  render() {\r\n    return (\r\n      <h1>\r\n        <Badge variant=\"secondary\">\r\n          <Container>\r\n            <Row className=\"align-items-center\">\r\n              <Col className=\"text-wrap\">{this.props.question.question}</Col>\r\n              <Col xs={2}>\r\n                <Button variant=\"danger\" size=\"sm\" onClick={this.handleRemove}>\r\n                  X\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Badge>\r\n      </h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionComponent;\r\n","import React from \"react\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport class AddQuestionComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: \"\" };\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\" && this.state.value) {\r\n      this.handleAdd();\r\n    }\r\n  };\r\n\r\n  handleAdd() {\r\n    this.props.onAddQuestion(this.state.value);\r\n    this.questionInput.focus();\r\n    this.setState({ value: \"\" });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label htmlFor=\"questionForm-url\">Please enter your question:</label>\r\n        <InputGroup>\r\n          <FormControl\r\n            ref={(questionInput) => {\r\n              this.questionInput = questionInput;\r\n            }}\r\n            id=\"questionForm\"\r\n            placeholder=\"How many dogs does John have?\"\r\n            onChange={this.handleChange}\r\n            value={this.state.value}\r\n            onKeyPress={this.handleKeyPress}\r\n          />\r\n          <InputGroup.Append>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={this.handleAdd}\r\n              disabled={!this.state.value}\r\n            >\r\n              Add\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddQuestionComponent;\r\n","import \"./LoadingScreenComponent.css\";\r\nimport logo from \"../assets/rnm.png\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from \"react-bootstrap/Container\";\r\nfunction LoadingScreenComponent(params) {\r\n  return (\r\n    <div className=\"ipl-progress-indicator\" id=\"ipl-progress-indicator\">\r\n      <div className=\"ipl-progress-indicator-head\">\r\n        <div className=\"first-indicator\"></div>\r\n        <div className=\"second-indicator\"></div>\r\n      </div>\r\n      <Jumbotron\r\n        className=\"d-flex align-items-center min-vh-100\"\r\n        style={{ backgroundColor: \"white\" }}\r\n      >\r\n        <Container className=\"text-center\">\r\n          <div className=\"insp-logo-frame\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          </div>\r\n        </Container>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreenComponent;\r\n","export default __webpack_public_path__ + \"static/media/evil-morty.af079507.jpg\";","export default __webpack_public_path__ + \"static/media/404.dcdfb1bb.png\";","import image from \"../assets/evil-morty.jpg\";\r\nimport notFound from \"../assets/404.png\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nfunction ServerErrorMessageComponent(params) {\r\n  if (params.msg === 404) {\r\n    return <NotFound />;\r\n  } else {\r\n    return <SomethingWentWrong msg={params.msg} />;\r\n  }\r\n}\r\n\r\nfunction SomethingWentWrong(params) {\r\n  return (\r\n    <Jumbotron\r\n      className=\"d-flex align-items-center min-vh-100\"\r\n      style={{ backgroundColor: \"white\" }}\r\n    >\r\n      <Container className=\"text-center\">\r\n        <div>\r\n          <h1>Oops... Something went wrong</h1>\r\n          <p>{params.msg}</p>\r\n          <img src={image} alt=\"\"></img>\r\n        </div>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nfunction NotFound(params) {\r\n  return (\r\n    <Jumbotron\r\n      className=\"d-flex align-items-center min-vh-100\"\r\n      style={{ backgroundColor: \"white\" }}\r\n    >\r\n      <Container className=\"text-center\">\r\n        <div>\r\n          <h1>This room doesn't exist</h1>\r\n          <img src={notFound} alt=\"\"></img>\r\n        </div>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default ServerErrorMessageComponent;\r\n","import React from \"react\";\r\nimport \"./ManageComponent.css\";\r\nimport QuestionComponent from \"./QuestionComponent\";\r\nimport AddQuestionComponent from \"./AddQuestionComponent\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport LoadingScreenComponent from \"./LoadingScreenComponent\";\r\nimport ServerErrorMessageComponent from \"./ServerErrorMessageComponent\";\r\nimport EditableLabel from \"react-inline-editing\";\r\n\r\nclass ManageComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"RoomId = \" + props.roomId);\r\n\r\n    this.state = {\r\n      nextId: 1,\r\n      showToast: false,\r\n    };\r\n\r\n    this.SaveOnServer = this.SaveOnServer.bind(this);\r\n    this.closeToast = this.closeToast.bind(this);\r\n    this.handleFocusOut = this.handleFocusOut.bind(this);\r\n  }\r\n\r\n  handleFocusOut(text) {\r\n    this.setState({ gameTitle: text }, () => this.SaveOnServer());\r\n    console.log(\"Left editor with text: \" + text);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoomDataFromServer();\r\n  }\r\n  getRoomDataFromServer() {\r\n    const myHeaders = new Headers({});\r\n    const myRequest = new Request(\r\n      `http://127.0.0.1:9631/manage?room_uuid=${this.props.roomId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: myHeaders,\r\n        mode: \"cors\",\r\n        cache: \"default\",\r\n      }\r\n    );\r\n\r\n    fetch(myRequest)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          this.setState({ requestStatus: response.status });\r\n          return;\r\n        }\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data === undefined) {\r\n          return;\r\n        }\r\n        console.log(data);\r\n        const calculateNextId =\r\n          Math.max(0, ...data[\"questions\"].slice().map((q) => q.id)) + 1;\r\n        this.setState({\r\n          gameTitle: data[\"title\"],\r\n          questions: data[\"questions\"],\r\n          nextId: calculateNextId,\r\n          requestStatus: \"OK\",\r\n        });\r\n        document.title = \"Group Trivia | \" + this.state.gameTitle;\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ requestStatus: \"Server unreachable\" });\r\n        return console.log(err);\r\n      });\r\n  }\r\n\r\n  // display form to fill questions\r\n  // button to add the question\r\n  // display the list of filled questions\r\n  // set title for the game\r\n  // save button ( option to save every 60 sec)\r\n  // start the game option\r\n\r\n  addQuestion(questionStr) {\r\n    console.log(\"Got question: \" + questionStr);\r\n    let myQuestions = this.state.questions.slice();\r\n    myQuestions.push({ question: questionStr, id: this.state.nextId });\r\n    this.setState(\r\n      { questions: myQuestions, nextId: this.state.nextId + 1 },\r\n      () => this.SaveOnServer()\r\n    );\r\n  }\r\n\r\n  removeQuestion(id) {\r\n    console.log(\"Removing question: \" + id);\r\n    let myQuestions = this.state.questions.slice();\r\n    const index = myQuestions.map((q) => q.id).indexOf(id);\r\n    if (index > -1) {\r\n      myQuestions.splice(index, 1);\r\n    }\r\n    this.setState({ questions: myQuestions }, () => this.SaveOnServer());\r\n  }\r\n\r\n  closeToast() {\r\n    this.setState({ showToast: false });\r\n  }\r\n\r\n  SaveOnServer() {\r\n    const myHeaders = new Headers({ \"Content-Type\": \"application/json\" });\r\n    const myRequest = new Request(\r\n      `http://127.0.0.1:9631/save?room_uuid=${this.props.roomId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        mode: \"cors\",\r\n        cache: \"default\",\r\n        body: JSON.stringify({\r\n          title: this.state.gameTitle,\r\n          questions: this.state.questions,\r\n        }),\r\n      }\r\n    );\r\n\r\n    fetch(myRequest).then(this.setState({ showToast: true }));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.requestStatus === undefined) {\r\n      return <LoadingScreenComponent />;\r\n    }\r\n    if (this.state.requestStatus !== \"OK\") {\r\n      return <ServerErrorMessageComponent msg={this.state.requestStatus} />;\r\n    }\r\n    const myQuestions = this.state.questions.slice().map((question, i) => {\r\n      return (\r\n        <QuestionComponent\r\n          onRemoveQuestion={(id) => this.removeQuestion(id)}\r\n          key={question.id}\r\n          question={question}\r\n        ></QuestionComponent>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h1>\r\n              <EditableLabel\r\n                text={this.state.gameTitle}\r\n                inputWidth=\"500px\"\r\n                inputHeight=\"50px\"\r\n                inputMaxLength=\"50\"\r\n                labelFontWeight=\"bold\"\r\n                inputFontWeight=\"bold\"\r\n                onFocusOut={this.handleFocusOut}\r\n              />\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={7}>\r\n            <AddQuestionComponent onAddQuestion={(q) => this.addQuestion(q)} />\r\n          </Col>\r\n          <Col sm={5}>\r\n            <ol>{myQuestions}</ol>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageComponent;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport HomeComponent from \"./components/HomeComponent\";\r\nimport GameComponent from \"./components/GameComponent\";\r\nimport ManageComponent from \"./components/ManageComponent\";\r\n\r\nfunction Inner(params) {\r\n  let query = new URLSearchParams(useLocation().search);\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <HomeComponent />\r\n      </Route>\r\n      <Route path=\"/manage\">\r\n        <ManageComponent roomId={query.get(\"roomId\")} />\r\n      </Route>\r\n      <Route path=\"/play\">\r\n        <GameComponent />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\nexport default function AppComponent() {\r\n  return (\r\n    <Router>\r\n      <Inner />\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AppComponent from \"./AppComponent\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <AppComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}